def appName    = "hello-openshift"
def tag        = "0.0-0"
def project    = "test-binary"
def inRegistry = "image-registry.openshift-image-registry.svc.cluster.local:5000"
def exRegistry = "quay-registry01-quay-quay01.apps.90ocp.example.com/cicd"
def gitUrl     = "http://gitea-cicd-tools.apps.90ocp.example.com/gitea/hello-openshift.git"
def destCreds  = "cicd+robot:UIJ3WBNTM75J8F90JWI9RERPHPJHK8681Y6YOTFTE8C58A65GDDA61R1PDJTEKF0"
pipeline {
  agent {
    label "slave"
  }

  stages {
    stage('Checkout Source') {
      steps {
        git credentialsId: 'gitea', url: "${gitUrl}"
        script {
          tag  = currentBuild.number
        }
      }
    }

    stage('Build and Tag OpenShift Image') {
      steps {
          echo "Building OpenShift container image ${appName}:${tag}"
          script {
            openshift.withCluster() {
              openshift.withProject("${project}") {
                openshift.selector("bc", "${appName}").startBuild("--from-file=./hello_openshift", "--wait=true")
                openshift.tag("${appName}:latest", "${appName}:${tag}")
              }
            }
          }
      }
    }

    stage('Deploy to Environment') {
      steps {
        echo "Deploying container image to environment"
        script {
          openshift.withCluster() {
            openshift.withProject("${project}") {
              openshift.set("image", "dc/${appName}", "${appName}=image-registry.openshift-image-registry.svc:5000/${project}/${appName}:${tag}")
              openshift.selector("dc", "${appName}").rollout().latest();

              sleep 5
              def dc = openshift.selector("dc", "${appName}").object()
              def dcVersion = dc.status.latestVersion
              def rc = openshift.selector("rc", "${appName}-${dcVersion}").object()

              echo "Waiting for ReplicationController \"${appName}-${dcVersion}\" to be ready"
              while (rc.spec.replicas != rc.status.readyReplicas) {
                sleep 5
                rc = openshift.selector("rc", "${appName}-${dcVersion}").object()
              }
            }
          }
        }
      }
    }

  }
}